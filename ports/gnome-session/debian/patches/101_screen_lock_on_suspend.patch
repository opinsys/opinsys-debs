Description: Use the same logic as gnome-power-manager for deciding the "screen lock on suspend" policy. This restores the Jaunty behaviour rather than just using the screensaver settings, which is surprising for users
Bug: https://bugzilla.gnome.org/show_bug.cgi?id=598118
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/karmic/+source/gnome-session/+bug/446191

Index: gnome-session-2.32.1/gnome-session/gsm-manager.c
===================================================================
--- gnome-session-2.32.1.orig/gnome-session/gsm-manager.c	2010-12-06 13:26:17.733212002 +0100
+++ gnome-session-2.32.1/gnome-session/gsm-manager.c	2010-12-06 13:26:17.829212002 +0100
@@ -85,6 +85,9 @@
 #define KEY_AUTOSAVE              KEY_GNOME_SESSION_DIR "/auto_save_session"
 
 #define KEY_SLEEP_LOCK            "/apps/gnome-screensaver/lock_enabled"
+#define KEY_SLEEP_LOCK_USE_SCREENSAVER "/apps/gnome-power-manager/lock/use_screensaver_settings"
+#define GPM_CONF_LOCK_ON_SUSPEND   "/apps/gnome-power-manager/lock/suspend"
+#define GPM_CONF_LOCK_ON_HIBERNATE "/apps/gnome-power-manager/lock/hibernate"
 
 typedef enum
 {
@@ -975,18 +978,33 @@
 }
 
 static gboolean
-sleep_lock_is_enabled (GsmManager *manager)
+sleep_lock_is_enabled (GsmManager  *manager,
+                       const gchar *policy)
 {
-        GError   *error;
-        gboolean  enable_lock;
+        GError      *error;
+        gboolean     enable_lock;
+        gboolean     use_ss_setting;
+        const gchar *real_policy;
 
         error = NULL;
+        use_ss_setting = gconf_client_get_bool (manager->priv->gconf_client, 
+                                                KEY_SLEEP_LOCK_USE_SCREENSAVER, &error);
+        if (error) {
+                g_warning ("Error retrieving configuration key '%s': %s",
+                           KEY_SLEEP_LOCK_USE_SCREENSAVER, error->message);
+                g_error_free (error);
+
+                use_ss_setting = FALSE;
+        }
+
+        real_policy = (use_ss_setting ? KEY_SLEEP_LOCK : policy);
+
         enable_lock = gconf_client_get_bool (manager->priv->gconf_client,
-                                             KEY_SLEEP_LOCK, &error);
+                                             real_policy, &error);
 
         if (error) {
                 g_warning ("Error retrieving configuration key '%s': %s",
-                           KEY_SLEEP_LOCK, error->message);
+                           real_policy, error->message);
                 g_error_free (error);
 
                 /* If we fail to query gconf key, just enable locking */
@@ -997,13 +1015,14 @@
 }
 
 static void
-manager_perhaps_lock (GsmManager *manager)
+manager_perhaps_lock (GsmManager  *manager,
+                      const gchar *policy)
 {
         GError   *error;
         gboolean  ret;
 
         /* only lock if gnome-screensaver is set to lock */
-        if (!sleep_lock_is_enabled (manager)) {
+        if (!sleep_lock_is_enabled (manager, policy)) {
                 return;
         }
 
@@ -1035,7 +1054,7 @@
         if (can_hibernate) {
 
                 /* lock the screen before we suspend */
-                manager_perhaps_lock (manager);
+                manager_perhaps_lock (manager, GPM_CONF_LOCK_ON_HIBERNATE);
 
                 error = NULL;
                 ret = up_client_hibernate_sync (manager->priv->up_client, NULL, &error);
@@ -1059,7 +1078,7 @@
         if (can_suspend) {
 
                 /* lock the screen before we suspend */
-                manager_perhaps_lock (manager);
+                manager_perhaps_lock (manager, GPM_CONF_LOCK_ON_SUSPEND);
 
                 error = NULL;
                 ret = up_client_suspend_sync (manager->priv->up_client, NULL, &error);
