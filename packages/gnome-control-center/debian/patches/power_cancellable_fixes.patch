Index: gnome-control-center-3.4.2/panels/power/cc-power-panel.c
===================================================================
--- gnome-control-center-3.4.2.orig/panels/power/cc-power-panel.c	2012-09-06 15:25:57.151177190 -0400
+++ gnome-control-center-3.4.2/panels/power/cc-power-panel.c	2012-09-06 15:56:21.191196495 -0400
@@ -98,6 +98,7 @@
     }
   if (priv->cancellable != NULL)
     {
+      g_cancellable_cancel (priv->cancellable);
       g_object_unref (priv->cancellable);
       priv->cancellable = NULL;
     }
@@ -121,14 +122,6 @@
 }
 
 static void
-cc_power_panel_finalize (GObject *object)
-{
-  CcPowerPanelPrivate *priv = CC_POWER_PANEL (object)->priv;
-  g_cancellable_cancel (priv->cancellable);
-  G_OBJECT_CLASS (cc_power_panel_parent_class)->finalize (object);
-}
-
-static void
 on_lock_settings_changed (GSettings     *settings,
                           const char    *key,
                           CcPowerPanel *panel)
@@ -145,7 +138,6 @@
   object_class->get_property = cc_power_panel_get_property;
   object_class->set_property = cc_power_panel_set_property;
   object_class->dispose = cc_power_panel_dispose;
-  object_class->finalize = cc_power_panel_finalize;
 }
 
 static void
@@ -642,8 +634,8 @@
 static void
 get_devices_cb (GObject *source_object, GAsyncResult *res, gpointer user_data)
 {
-  CcPowerPanel *panel = CC_POWER_PANEL (user_data);
-  CcPowerPanelPrivate *priv = panel->priv;
+  CcPowerPanel *panel;
+  CcPowerPanelPrivate *priv;
   gboolean got_primary = FALSE;
   gboolean ups_as_primary_device = FALSE;
   GError *error = NULL;
@@ -659,6 +651,16 @@
   UpDeviceKind kind;
   UpDeviceState state;
 
+  result = g_dbus_proxy_call_finish (G_DBUS_PROXY (source_object), res, &error);
+  if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+    {
+      g_error_free (error);
+      return; // Must exit before accessing freed memory
+    }
+
+  panel = CC_POWER_PANEL (user_data);
+  priv = panel->priv;
+
   /* empty the secondary box */
   widget = GTK_WIDGET (gtk_builder_get_object (priv->builder,
                                                "grid_secondary"));
@@ -675,7 +677,6 @@
                                                "box_secondary"));
   gtk_widget_hide (widget);
 
-  result = g_dbus_proxy_call_finish (G_DBUS_PROXY (source_object), res, &error);
   if (result == NULL)
     {
       g_printerr ("Error getting devices: %s\n", error->message);
@@ -774,16 +775,22 @@
 got_power_proxy_cb (GObject *source_object, GAsyncResult *res, gpointer user_data)
 {
   GError *error = NULL;
-  CcPowerPanelPrivate *priv = CC_POWER_PANEL (user_data)->priv;
+  GDBusProxy *proxy;
+  CcPowerPanelPrivate *priv;
 
-  priv->proxy = g_dbus_proxy_new_for_bus_finish (res, &error);
-  if (priv->proxy == NULL)
+  proxy = g_dbus_proxy_new_for_bus_finish (res, &error);
+  if (proxy == NULL)
     {
       g_printerr ("Error creating proxy: %s\n", error->message);
       g_error_free (error);
       return;
     }
 
+  /* Access user_data after checking for error because user_data might be
+     disposed already. */
+  priv = CC_POWER_PANEL (user_data)->priv;
+  priv->proxy = proxy;
+
   /* we want to change the primary device changes */
   g_signal_connect (priv->proxy,
                     "g-properties-changed",
