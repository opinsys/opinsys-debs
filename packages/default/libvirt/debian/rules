#!/usr/bin/make -f

DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU 2>/dev/null)
DEB_HOST_ARCH_OS := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS 2>/dev/null)

    WITH_XEN = --with-xen
    WITH_LIBXL = --with-libxl
    WITH_VBOX = --with-vbox
    MAKE_CHECK = 1
  WITH_STORAGE_LVM    = --with-storage-lvm
#  WITH_STORAGE_ISCSI  = --with-storage-iscsi
  WITH_STORAGE_DISK   =	--with-storage-disk
  WITH_STORAGE_SHEEPDOG = --with-storage-sheepdog
  WITH_STORAGE_RBD    = --with-storage-rbd
  WITH_UDEV           = --with-udev
  WITH_CAPNG          = --with-capng
  WITH_POLKIT         = --with-polkit
  WITH_MACVTAP        = --with-macvtap
  WITH_NETWORK        = --with-network
  WITH_QEMU           = --with-qemu
  WITH_OPENVZ         = --with-openvz
  WITH_NETCF          = --with-netcf
  WITH_SANLOCK        = --with-sanlock
#  WITH_INIT_SCRIPT    =	--with-init-script=upstart
#  WITH_SYSTEMD        = --with-systemd-daemon
  WITH_AUDIT          = --with-audit
  WITH_SELINUX        = --with-selinux --with-secdriver-selinux --with-selinux-mount=/sys/fs/selinux
  WITH_APPARMOR       = --with-apparmor --with-secdriver-apparmor --with-apparmor-profiles
  ifneq (,$(findstring $(DEB_HOST_ARCH), amd64 armel armhf i386 ia64 powerpc s390))
      WITH_DTRACE     = --with-dtrace
  else
      WITH_DTRACE     = --without-dtrace
  endif
  ifneq (,$(findstring $(DEB_HOST_ARCH), amd64 i386 ia64 mips mipsel powerpc))
      WITH_NUMA       = --with-numactl
  else
      WITH_NUMA       = --without-numactl
  endif
  ifneq (,$(findstring $(DEB_HOST_ARCH), ia64))
      WITH_LXC        = --without-lxc
  else
      WITH_LXC        = --with-lxc
  endif

WITH_STORAGE_SHEEPDOG = --without-storage-sheepdog
WITH_STORAGE_RBD      = --without-storage-rbd
WITH_LIBXL            = --without-libxl
WITH_MACVTAP          = --without-macvtap
WITH_SELINUX          = --without-selinux

DEB_CONFIGURE_EXTRA_ARGS :=      \
	--without-selinux	 \
	--disable-silent-rules   \
	--disable-rpath          \
	$(WITH_QEMU)		 \
	--with-qemu-user=libvirt-qemu  \
	--with-qemu-group=libvirt-qemu \
        $(WITH_OPENVZ)		 \
	--with-avahi             \
	--with-sasl              \
	--with-yajl              \
	--with-ssh2		 \
	$(WITH_POLKIT)		 \
	$(WITH_UDEV)		 \
	--with-storage-fs        \
	$(WITH_STORAGE_LVM)	 \
#	$(WITH_STORAGE_ISCSI)	 \
	$(WITH_STORAGE_DISK)	 \
	$(WITH_STORAGE_SHEEPDOG) \
	$(WITH_STORAGE_RBD)      \
	$(WITH_INIT_SCRIPT)      \
	$(WITH_NUMA)             \
	$(WITH_APPARMOR)         \
	--without-esx		 \
	--without-phyp           \
	$(WITH_CAPNG)		 \
	--enable-debug		 \
	$(WITH_MACVTAP)		 \
	$(WITH_NETWORK)		 \
	$(WITH_NETCF)		 \
	$(WITH_XEN)		 \
	$(WITH_LIBXL)		 \
	$(WITH_VBOX)		 \
	$(WITH_LXC)              \
	$(WITH_DTRACE)           \
	$(WITH_AUDIT)            \
	--without-hal            \
	--without-firewalld

DEB_BUILDDIR := $(CURDIR)/debian/build
LOGROTATE = $(basename $(basename $(notdir $(wildcard daemon/libvirtd*.logrotate.in))))
EXAMPLES_DIR = $(CURDIR)/debian/libvirt-doc/usr/share/doc/libvirt-doc/examples/

%:
	dh $@ --builddirectory=$(DEB_BUILDDIR) --parallel

override_dh_auto_configure:
	dh_auto_configure -- $(DEB_CONFIGURE_EXTRA_ARGS)

override_dh_auto_install:
	dh_auto_install
	# Add empty dirs so dh_install doesn't fail on kFreebsd until we have
	# Polkit/Systemd/systemtap/apparmor support
	mkdir -p debian/tmp/usr/share/polkit-1 \
	         debian/tmp/usr/lib/systemd/system \
	         debian/tmp/usr/share/systemtap \
	         debian/tmp/etc/apparmor.d/

override_dh_auto_test:
	export LD_PRELOAD="";     \
	export VIR_TEST_DEBUG=1;  \
	[ -n "$(MAKE_CHECK)" ] || exit 0; \
	if ! dh_auto_test -O--builddirectory=$(DEB_BUILDDIR); then \
	    cat ./debian/build/gnulib/tests/test-suite.log \
	        ./debian/build/tests/test-suite.log; \
	    exit 1; \
	fi

override_dh_install:
	dh_install
	# Copy upstream files to debian/ so dh_* can find them
	cp debian/tmp/usr/lib/libvirt/libvirt-guests.sh \
	    debian/libvirt-bin.libvirt-guests.init
	cp tools/libvirt-guests.sysconf \
	    debian/libvirt-bin.libvirt-guests.default
#ifneq (,$(findstring $(DEB_HOST_ARCH_OS), linux))
#	mv debian/libvirt-bin/lib/systemd/system/libvirtd.service \
#	   debian/libvirt-bin/lib/systemd/system/libvirt-bin.service
#endif

	for l in $(LOGROTATE); do \
		cp $(CURDIR)/debian/build/daemon/$$l.logrotate \
                   debian/libvirt-bin.$$l.logrotate; \
		dh_installlogrotate --name=$$l;     \
	done

	# Don't ship any la files
	rm debian/libvirt-bin/usr/lib/libvirt/connection-driver/*.la
	# Don't ship api files in the daemon package
	rm -r debian/libvirt-bin/usr/share/libvirt/api/

override_dh_installinit:
#	dh_systemd_enable
	dh_installinit --name=libvirt-bin --restart-after-upgrade -- defaults 28 72
	dh_installinit --name=libvirt-guests --no-restart-on-upgrade -- defaults 29 71
#	dh_systemd_start --restart-after-upgrade

override_dh_installdocs:
	dh_installdocs
	# Remove binaries and object files examples
	[ ! -d $(EXAMPLES_DIR) ] || find $(EXAMPLES_DIR) -name "*.o" -type f -delete -o -name .libs -type d -exec rm -rf {} \;
	rm -f $(EXAMPLES_DIR)domain-events/events-c/event-test
	rm -f $(EXAMPLES_DIR)dominfo/info1
	rm -f $(EXAMPLES_DIR)domsuspend/suspend
	rm -f $(EXAMPLES_DIR)hellolibvirt/hellolibvirt

override_dh_strip:
	dh_strip --dbg-package=libvirt0-dbg

override_dh_auto_clean:
	[ ! -f Makefile ] || dh_auto_clean
	rm -f $(CURDIR)/debian/libvirt-bin.libvirt-guests.init
	rm -f $(CURDIR)/debian/libvirt-bin.libvirt-guests.default
	rm -f $(CURDIR)/debian/libvirt-bin.*.logrotate
	rm -f $(CURDIR)/debian/*.service
	rm -rf $(DEB_BUILDDIR)

PACKAGE = libvirt
SRC_VERSION := $(shell dpkg-parsechangelog | sed -ne 's/^Version: \(\([0-9]\+\):\)\?\(.*\)-.*/\3/p')
TARBALL = $(PACKAGE)_$(SRC_VERSION).orig.tar.gz
.PHONY: get-orig-source
get-orig-source:
	wget -c http://libvirt.org/sources/libvirt-$(SRC_VERSION).tar.gz -O ../$(TARBALL)
	tar -z -x -f ../$(TARBALL) --strip-components=1 -C .
