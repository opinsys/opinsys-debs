Description: fix out-of-bounds buffer write on state load with invalid config_len
Origin: upstream, http://git.qemu.org/?p=qemu.git;a=commit;h=a890a2f9137ac3cf5b607649e66a6f3a5512d8dc
Origin: upstream, http://git.qemu.org/?p=qemu.git;a=commit;h=2f5732e9648fcddc8759a8fd25c0b41a38352be6

Index: qemu-2.0.0+dfsg/hw/virtio/virtio.c
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/virtio/virtio.c	2014-08-12 08:06:21.938481128 -0400
+++ qemu-2.0.0+dfsg/hw/virtio/virtio.c	2014-08-12 08:06:40.466481428 -0400
@@ -898,6 +898,7 @@
 int virtio_load(VirtIODevice *vdev, QEMUFile *f)
 {
     int i, ret;
+    int32_t config_len;
     uint32_t num;
     uint32_t features;
     uint32_t supported_features;
@@ -924,8 +925,19 @@
                      features, supported_features);
         return -1;
     }
-    vdev->config_len = qemu_get_be32(f);
-    qemu_get_buffer(f, vdev->config, vdev->config_len);
+    config_len = qemu_get_be32(f);
+
+    /*
+     * There are cases where the incoming config can be bigger or smaller
+     * than what we have; so load what we have space for, and skip
+     * any excess that's in the stream.
+     */
+    qemu_get_buffer(f, vdev->config, MIN(config_len, vdev->config_len));
+
+    while (config_len > vdev->config_len) {
+        qemu_get_byte(f);
+        config_len--;
+    }
 
     num = qemu_get_be32(f);
 
