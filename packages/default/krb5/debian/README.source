
This package is managed with git-dpm.
If you are not familiar with git-dpm, then treat it as a standard quilt package stored in git with patches applied; it will become obvious the next time that git-dpm is used that cleanup is required and the appropriate cherry-picks can be made.


Submitting Patch to the Maintainer:

It's best to clone the git repository mentioned in debian/control and
use the git format-patch command to generate patches.  Attach these
patches to bugs on  the krb5 source package.


Preparing a new Upstream version:

You'll need two things to do this correctly.  First, you'll need the
upstream tarball.  Secondly, you'll need the upstream subversion
repository converted to git with parameters compatible with
git://github.com/krb5/krb5-anonsvn.git .  My work flow combines
the process of making DFSG modifications with the process of handling
the SCM issues.
From within a git repository containing both the upstream tag for the release and the debian packaging:

1) Make sure there is a local upstream branch that descends from origin/upstream
2) debian/prepsource upstream_tarfile tag_from_subversion upstream/version_number

This will update the upstream branch and create an upstream tag.  

2) Use git archive to generate a tarball with dfsg modifications.

3) git dpm new-upstream that tarball.

4) git dpm checkout-patched&&git rebase upstream_tag

5) git dpm update-patches

Old repository: There's an old repository at
git://git.debian.org/git/pkg-k5-afs/krb5-debian-2011.git containing
old packaging. If you want to merge or otherwise work across the
boundary with that old repository then you may want to copy
debian/source/grafts.old_repository to .git/info/grafts

Do not commit anything based on the old repository to the new one.
Ideally the commit hooks should stop you.

 -- Sam Hartman <hartmans@debian.org>, Tue, 27 Dec 2011 06:11:15 -0500
